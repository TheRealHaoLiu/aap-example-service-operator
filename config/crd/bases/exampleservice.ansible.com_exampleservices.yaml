---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: exampleservices.exampleservice.ansible.com
spec:
  group: exampleservice.ansible.com
  names:
    kind: ExampleService
    listKind: ExampleServiceList
    plural: exampleservices
    singular: exampleservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExampleService is the Schema for the exampleservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ExampleService
            type: object
            properties:
              aap_ref:
                description: Reference to the AnsibleAutomationPlatform instance
                type: object
                required:
                  - name
                properties:
                  name:
                    description: Name of the AnsibleAutomationPlatform instance
                    type: string
                  namespace:
                    description: Namespace of the AnsibleAutomationPlatform instance (optional, defaults to the same namespace as the ExampleService)
                    type: string
            # aap_ref is optional
          status:
            description: Status defines the observed state of ExampleService
            type: object
            properties:
              phase:
                description: Current phase of the service
                type: string
              platformServiceRegistration:
                description: Name of the PlatformServiceRegistration CR
                type: string
              serviceSecretName:
                description: Name of the secret containing the service secret
                type: string
              conditions:
                description: The resulting conditions when a Service is instantiated
                items:
                  properties:
                    status:
                      type: string
                    type:
                      type: string
                    reason:
                      type: string
                    lastTransitionTime:
                      type: string
                    message:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
        type: object
    served: true
    storage: true
    subresources:
      status: {}
